{"version":3,"sources":["Modal.js","App.js","index.js"],"names":["Modal","forwardRef","props","ref","useState","display","setDisplay","useImperativeHandle","openModal","open","closeModal","close","className","onClick","children","App","checkRef","useRef","modalRef","editRef","isCompleted","setIsCompleted","editField","setEditField","editLabel","setEditLabel","taskField","setTaskField","bucketLabel","setBucketLabel","bucketInput","setBucketInput","buckets","setBuckets","tasks","setTasks","edit","setEdit","useEffect","getBuckets","a","fetch","response","json","result","console","error","getTasks","handleSubmit","e","preventDefault","bucket_name","body","task_name","method","headers","JSON","stringify","newTask","newtasks","push","bucketSubmit","newBucket","newBuckets","deleteTask","_id","updatedTasks","filter","task","updateTask","reponse","editedTasks","map","current","toggleTask","check","checked","task_isCompleted","log","onSubmit","type","placeholder","aria-label","value","onChange","target","disabled","id","defaultChecked","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ce0a0e8.chunk.js","sourcesContent":["import React,{useState,forwardRef,useImperativeHandle} from 'react'\n\nconst Modal=forwardRef((props,ref)=>{\n    const [display,setDisplay]=useState(null)\n\n    useImperativeHandle(ref,()=>{\n        return{\n            openModal:()=>open(),\n            closeModal:()=>close()\n        }\n    })\n\n    const open=()=>{\n        setDisplay(true)\n    }\n    const close=()=>{\n        setDisplay(false)\n    }\n    if(display){\n        return (\n        <div className={\"modal-wrapper\"}>\n            <div onClick={close} className={\"modal-backdrop\"}/>\n            <div className={\"modal-box\"}>\n                {props.children}\n            </div>\n        </div>\n        )\n       \n        \n    }\n    return null\n\n})\nexport default Modal;","import React,{useState,useEffect,useRef} from 'react'\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport './App.css';\nimport Modal from './Modal'\n\nfunction App() {\n  const checkRef=useRef();\n  const modalRef=useRef();\n  const editRef=useRef()\n  const [isCompleted,setIsCompleted]=useState(false)\n  const [editField,setEditField]=useState('');\n  const [editLabel,setEditLabel]=useState('');\n  const [taskField,setTaskField]=useState('')\n  const [bucketLabel,setBucketLabel]=useState('disabledOption')\n  const [bucketInput,setBucketInput]=useState('')\n  const [buckets,setBuckets]=useState([])\n  const [tasks,setTasks]=useState([])\n const [edit,setEdit]=useState({})\n  useEffect(()=>{\n    const getBuckets=async()=>{\n      try {\n        const response=await fetch('/api/buckets')\n      const result=await response.json()\n      setBuckets(result)\n      } catch (err) {\n        console.error(err)\n      }\n      \n    }\n    const getTasks=async()=>{\n      try {\n        const response=await fetch(\"/api/tasks\")\n        const result=await response.json()\n        setTasks(result)\n      } catch (err) {\n        console.error(err)\n      }\n    }\n    getBuckets()\n    getTasks()\n\n  },[])\n  const handleSubmit=async(e)=>{\n    e.preventDefault()\n    try {\n      if(taskField ){\n        \n        let bucket_name=bucketLabel\n        if(bucket_name==='disabledOption'){\n          bucket_name=''\n        }\n        const body={\n          bucket_name:bucket_name,task_name:taskField\n        }\n        const response=await fetch(\"/api/tasks\",{\n        method:'POST',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify(body)\n        })\n        const newTask=await response.json()\n        const newtasks=[...tasks]\n        newtasks.push(newTask)\n        setTasks(newtasks)\n      }\n      \n    } catch (err) {\n      console.error(err)\n    }\n    setTaskField('')\n    setBucketLabel('disabledOption')\n  }\n  const bucketSubmit=async (e)=>{\n    e.preventDefault()\n    try {\n      const response=await fetch(\"/api/buckets\",{\n        method:'POST',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify({bucket_name:bucketInput})\n      })\n      const newBucket=await response.json()\n      const newBuckets=[...buckets]\n      newBuckets.push(newBucket)\n      setBuckets(newBuckets)\n    } catch (err) {\n      console.error(err)\n    }\n    setBucketInput('')\n  }\n  const deleteTask=async (_id)=>{\n   \n    try {\n      await fetch(\"/api/tasks\",{\n        method:'DELETE',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify({_id:_id})\n      })\n      const updatedTasks=[...tasks].filter(task=>task._id!==_id)\n      //const newBucket=await response.json()\n      // const newBuckets=[...buckets]\n      // newBuckets.push(newBucket)\n      setTasks(updatedTasks)\n    } catch (err) {\n      console.error(err)\n    }\n   \n  }\n const openModal=(_id)=>{\n  setEdit([...tasks].filter(task=>task._id===_id)[0])\n  const task=[...tasks].filter(task=>task._id===_id)[0]\n  \n  setEditField(task.task_name)\n  if(task.bucket_name===''){\n    setEditLabel('disabledOption')\n  }\n  else{\n    setEditLabel(task.bucket_name)\n  }\n  \n   modalRef.current.openModal()\n   console.log(editRef)\n   \n // modalRef.current.openModal()\n }\n const updateTask=async(e)=>{\n   e.preventDefault()\n    //console.log(edit)\n    try {\n      const body={\n        _id:edit._id,\n        task_name:editField,\n        bucket_name:editLabel\n      }\n      const reponse=await fetch(\"/api/tasks\",{\n        method:'PUT',\n        headers:{'Content-Type':'application/json'},\n        body:JSON.stringify(body)\n      })\n      const result=await reponse.json()\n      const editedTasks=[...tasks].map(task => (task._id === body._id ? result : task))\n      setTasks(editedTasks)\n      //console.log(result)\n    } catch (err) {\n      console.error(err)\n    }\n\n  modalRef.current.closeModal()\n }\n\n const toggleTask=async(_id)=>{\n   setIsCompleted(!isCompleted)\n   let check\n   if(checkRef.current.checked){\n    check=checkRef.current.checked\n   }\n   else{\n     check=false\n   }\n    const body={\n     _id:_id,\n     task_isCompleted:check\n   }\n   \n   \n   try {\n     const response=await fetch(\"/api/tasks/toggle\",{\n       method:\"PUT\",\n       headers:{'Content-Type':'application/json'},\n       body:JSON.stringify(body)\n\n     })\n     const result=await response.json()\n     console.log(result)\n     const editedTasks=[...tasks].map(task => (task._id === _id ? result : task))\n      setTasks(editedTasks)\n   } catch (err) {\n     console.error(err)\n   }\n }\n\n  return (\n    <div className=\"App\">\n      <div className=\"buckets container\">\n        <h2>Buckets</h2>\n          <ul className=\"buckets-list\">\n                {buckets.map(({_id,bucket_name})=>{\n                  return(\n                    <li className=\"bucket-name\" key={_id}>{bucket_name}</li>\n                  )\n                })}\n              {/* <li className=\"bucket-name\">Important</li>\n                <li className=\"bucket-name\">Updates</li>\n                <li className=\"bucket-name\">other</li> */}\n            </ul>\n            <form className=\"bucketForm\"onSubmit={bucketSubmit}>\n                <input type=\"text\"\n                        className=\"bucketInput\"\n                        placeholder=\"new bucket\"\n                        aria-label=\"new bucket name\"\n                        value={bucketInput}\n                        onChange={(e)=>setBucketInput(e.target.value)}\n                />\n                <button className=\"btn create\" aria-label=\"create new bucket\">+</button>\n            </form>\n      </div>\n      <div className=\"todo-container container\">\n      <h1>What's the Plan for Today?</h1>\n          <div className=\"todo-form-container\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-fields\">\n              <input type=\"text\" \n                      placeholder=\"Enter a new task\"\n                      value={taskField}\n                      onChange={(e)=>setTaskField(e.target.value)}\n              />\n              <select  className=\"label-todo\"value={bucketLabel} onChange={(e)=>setBucketLabel(e.target.value)}>\n              <option  value=\"disabledOption\" disabled >Add Bucket</option>\n                {buckets.map(({bucket_name,_id})=>{\n                  return(\n                    <option  className=\"label-option\" key={_id} value={bucket_name}>{bucket_name}</option>\n                  )\n                })}\n              </select>\n              </div>\n              \n              <div className=\"todo-btn\">\n                  <button >\n                          Add Task\n                </button>\n                </div>\n            </form>\n          </div>\n          <div className=\"todo-list\">\n            <div className=\"tasks\">\n              {tasks.map(({_id,task_name,bucket_name,task_isCompleted})=>{\n                return(\n                  <div className=\"task-container\" key={_id}>\n                    <div className=\"task\">\n                      <div className=\"task-input-label\" >\n                      \n                        <input type=\"checkbox\" \n                                ref={checkRef}\n                                id={_id} \n                                defaultChecked={task_isCompleted?task_isCompleted:isCompleted}\n                              onChange={()=>toggleTask(_id)}\n                              \n                        />\n                        <label htmlFor={_id} >\n                          <span className=\"custom-checkbox\"></span>\n                            {task_name}\n                        </label>\n                      </div>\n                      <span>{bucket_name}</span>\n                    </div>\n                    <div className=\"icons\">\n                      <TiEdit className=\"edit-icon\" onClick={()=>openModal(_id)}/>\n                      <RiCloseCircleLine className=\"delete-icon\" onClick={()=>deleteTask(_id)}/>\n                    </div>\n                  </div>\n                )\n              })}\n             \n            </div>\n          </div>\n         \n         \n        </div>\n        <Modal ref={modalRef} >\n              <div className=\"modal-form\">\n              <form onSubmit={updateTask}>\n              <div className=\"form-fields\">\n              <input type=\"text\" \n                      placeholder=\"update existing task\"\n                      value={editField}\n                      ref={editRef}\n                      onChange={(e)=>setEditField(e.target.value)}\n              />\n              <select  className=\"label-todo\"value={editLabel} onChange={(e)=>setEditLabel(e.target.value)}>\n              <option  value=\"disabledOption\" disabled >Add Bucket</option>\n                {buckets.map(({bucket_name,_id})=>{\n                  return(\n                    <option  className=\"label-option\" key={_id} value={bucket_name}>{bucket_name}</option>\n                  )\n                })}\n              </select>\n              </div>\n              \n              <div className=\"todo-btn\">\n                  <button >\n                          Update Task\n                </button>\n                </div>\n            </form>\n            </div>\n        </Modal>\n      </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}